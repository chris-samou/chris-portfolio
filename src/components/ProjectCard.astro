---
import Icon from "./Icon.astro";

interface Props {
  title: string;
  description: string;
  image: string;
  tags: string[];
  liveUrl?: string;
  repoUrl?: string;
  type?: string;
}
const {
  title,
  description,
  image,
  tags,
  liveUrl,
  repoUrl,
  type = "personal",
} = Astro.props;
---

<article
  class="relative bg-background border border-muted/50 rounded-lg shadow-sm overflow-hidden h-[400px] w-full flex flex-col group"
  aria-label={`Project card: ${title}`}
>
  <span
    class={`absolute top-4 right-4 px-2 py-0.5 rounded-full text-xs font-semibold select-none z-20 ${
      type === "work"
        ? "bg-blue-100 text-blue-800"
        : "bg-green-100 text-green-800"
    }`}
    aria-label={`Project type: ${type === "work" ? "Work" : "Personal"}`}
  >
    {type === "work" ? "Work" : "Personal"}
  </span>

  <div
    role="button"
    tabindex="0"
    class="relative h-full overflow-hidden rounded-t-lg cursor-pointer"
    data-overlay-toggle
    aria-label={liveUrl
      ? `View live project: ${title}`
      : `View code repository: ${title}`}
  >
    <img
      src={image}
      alt={`Screenshot of ${title}`}
      class="w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-105"
      loading="lazy"
      decoding="async"
      fetchpriority="low"
    />
    <div class="absolute bottom-0 bg-background/80 p-4 w-full">
      <h3 class="text-lg font-semibold text-foreground">{title}</h3>
    </div>
  </div>

  <div
    class="absolute inset-0 bg-background/90 backdrop-blur-sm flex flex-col max-md:pt-12 p-6 transition-opacity duration-300 z-10
  pointer-events-auto opacity-100 md:opacity-0 md:pointer-events-none md:group-hover:opacity-100 md:group-hover:pointer-events-auto"
    data-overlay
  >
    <div class="flex-grow overflow-auto">
      <h3 class="text-xl font-bold mb-2 text-foreground">{title}</h3>
      <p class="text-muted-foreground mb-4">{description}</p>

      <div class="flex flex-wrap gap-2 mb-4">
        {
          tags.map((tag) => (
            <span
              class="text-xs font-semibold bg-primary/10 text-primary px-2 py-1 rounded-full select-none"
              aria-label={`Tag: ${tag}`}
            >
              {tag}
            </span>
          ))
        }
      </div>
    </div>

    <div
      class="flex-shrink-0 flex justify-end items-center gap-6 pt-4 border-t border-muted/50 text-sm font-medium"
    >
      {
        liveUrl && (
          <a
            href={liveUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="group flex items-center gap-2 relative text-muted-foreground hover:text-primary cursor-pointer"
            aria-label={`View live project: ${title}`}
          >
            <span class="relative">
              View Project
              <span
                aria-hidden="true"
                class="absolute left-0 bottom-0 h-[2px] bg-primary w-0 group-hover:w-full transition-all duration-300 ease-out"
              />
            </span>
            <Icon
              name="arrow"
              class="w-4 h-4 transition-transform duration-300 ease-in-out transform group-hover:scale-110"
            />
          </a>
        )
      }

      {
        repoUrl && (
          <a
            href={repoUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="group flex items-center gap-2 relative text-muted-foreground hover:text-primary cursor-pointer"
            aria-label={`View code repository: ${title}`}
          >
            <span class="relative">
              View Code
              <span
                aria-hidden="true"
                class="absolute left-0 bottom-0 h-[2px] bg-primary w-0 group-hover:w-full transition-all duration-300 ease-out"
              />
            </span>
            <Icon
              name="arrow"
              class="w-4 h-4 transition-transform duration-300 ease-in-out transform group-hover:scale-110"
            />
          </a>
        )
      }
    </div>
    <button
      type="button"
      class="absolute top-4 right-4 text-muted-foreground hover:text-primary text-sm font-medium z-20 block md:hidden"
      data-overlay-close
    >
      Close
    </button>
  </div>
</article>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const isTouchDevice = window.matchMedia("(hover: none)").matches;
    const cards = document.querySelectorAll("[data-overlay-toggle]");

    cards.forEach((card) => {
      const overlay = card.parentElement?.querySelector("[data-overlay]");
      const closeBtn = card.parentElement?.querySelector(
        "[data-overlay-close]",
      );

      if (isTouchDevice) {
        card.addEventListener("click", (e) => {
          e.preventDefault();
          if (overlay) {
            overlay.classList.add("opacity-100", "pointer-events-auto");
          }
        });

        if (closeBtn) {
          closeBtn.addEventListener("click", (e) => {
            e.preventDefault();
            overlay?.classList.remove("opacity-100", "pointer-events-auto");
          });
        }
      }
    });
  });
</script>
